var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$span,
				{ctor: '[]'},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html$text(
					_elm_lang$core$Basics$toString(model.clientName)),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$br,
						{ctor: '[]'},
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$span,
							{ctor: '[]'},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html$text(
								_elm_lang$core$Basics$toString(model.word)),
							_1: {ctor: '[]'}
						}
					}
				}
			}
		});
};
var _user$project$Main$getValue = F2(
	function (v, str) {
		var _p0 = A2(
			_elm_lang$core$Json_Decode$decodeString,
			A2(_elm_lang$core$Json_Decode$field, v, _elm_lang$core$Json_Decode$string),
			str);
		if (_p0.ctor === 'Err') {
			return '';
		} else {
			return _p0._0;
		}
	});
var _user$project$Main$server = 'ws://127.0.0.1:3000/ws';
var _user$project$Main$Model = F2(
	function (a, b) {
		return {word: a, clientName: b};
	});
var _user$project$Main$init = {
	ctor: '_Tuple2',
	_0: A2(_user$project$Main$Model, '', ''),
	_1: _elm_lang$core$Platform_Cmd$none
};
var _user$project$Main$update = F2(
	function (msg, _p1) {
		var _p2 = _p1;
		var _p3 = msg;
		if (_p3.ctor === 'KeyPressed') {
			return {
				ctor: '_Tuple2',
				_0: A2(_user$project$Main$Model, _p2.word, _p2.clientName),
				_1: A2(
					_elm_lang$websocket$WebSocket$send,
					_user$project$Main$server,
					A2(
						_elm_lang$core$Basics_ops['++'],
						'{\"Author\": \"Chris\", \"Body\": \"',
						A2(
							_elm_lang$core$Basics_ops['++'],
							_elm_lang$core$Basics$toString(
								_elm_lang$core$Char$fromCode(_p3._0)),
							'\"}')))
			};
		} else {
			var _p4 = _p3._0;
			return {
				ctor: '_Tuple2',
				_0: A2(
					_user$project$Main$Model,
					A2(_user$project$Main$getValue, 'Body', _p4),
					A2(_user$project$Main$getValue, 'Author', _p4)),
				_1: _elm_lang$core$Platform_Cmd$none
			};
		}
	});
var _user$project$Main$KeyPressed = function (a) {
	return {ctor: 'KeyPressed', _0: a};
};
var _user$project$Main$NewMessage = function (a) {
	return {ctor: 'NewMessage', _0: a};
};
var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$batch(
		{
			ctor: '::',
			_0: _elm_lang$keyboard$Keyboard$downs(_user$project$Main$KeyPressed),
			_1: {
				ctor: '::',
				_0: A2(_elm_lang$websocket$WebSocket$listen, _user$project$Main$server, _user$project$Main$NewMessage),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})();
